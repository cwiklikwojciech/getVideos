{"version":3,"sources":["features/counter/counterSlice.js","features/counter/Counter.js","features/counter/reactPlayer.js","features/counter/Posts.js","features/counter/Tiles.js","features/counter/Pagination.js","features/counter/TodoItem.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["data","localStorage","getItem","initialState","todoList","JSON","parse","isVisible","isFevorite","isSort","counterSlice","createSlice","name","reducers","setCheck","state","action","x","map","item","payload","id","splice","setFavorite","favorite","setClear","length","clear","setVideo","push","setItem","stringify","setSort","setVisible","setFevorite","actions","saveTodo","selectTodoList","todos","selectIsVisible","selectIsFevorite","selectIsSort","Counter","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","setIsVisible","setIsFevorite","setIsSort","lastPartAfterSign","str","separator","stringSarach","n","search","result","substring","lastIndexOf","getVimeo","fetch","then","response","json","itemView","stats_number_of_plays","itemLike","stats_number_of_likes","image","thumbnail_large","imageSmall","title","published","upload_date","video","done","Date","now","getYoutube","items","statistics","viewCount","likeCount","snippet","thumbnails","medium","url","default","publishedAt","className","type","value","onChange","e","target","onClick","demo","i","style","background","ModalExample","props","buttonLabel","VimeoOrYoutube","modal","setModal","toggle","Button","color","Modal","isOpen","ModalHeader","ModalBody","width","height","ModalFooter","Posts","loading","like","view","sm","src","alt","Tiles","CardGroup","Card","CardImg","top","CardBody","CardTitle","tag","CardSubtitle","CardText","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","Math","ceil","number","TodoItem","list","posts","setPosts","setLoading","currentPage","setCurrentPage","postsPerPageTiles","useEffect","a","fetchPosts","obj1","obj","propName","undefined","clean","fn","Object","fromEntries","entries","k","v","objectMap","values","sort","property","sortOrder","substr","b","dynamicSort","fevoriteAmoutn","indexOfLastPost","indexOfFirstPost","currentPosts","slice","indexOfLastPostTiles","indexOfFirstPostTiles","currentPostsTiles","pageNumber","post","require","config","App","useSelector","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d9100ce.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst data = localStorage.getItem(\"state\");\r\n\r\nconst initialState = {\r\n  todoList: data ? JSON.parse(data) : [],\r\n  isVisible: 0,\r\n  isFevorite : false,\r\n  isSort : false,\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'x',\r\n  initialState,\r\n  reducers: {     \r\n    \r\n  setCheck: (state,action) => {\r\n    let x=0;\r\n      state.todoList.map(item => {\r\n        if(action.payload === item.id){\r\n          state.todoList.splice(x,1);\r\n        }\r\n        x++;\r\n      })\r\n  },\r\n\r\n  setFavorite:(state,action) => {\r\n    let x=0;\r\n    state.todoList.map(item => {\r\n      if(action.payload === item.id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      x++;\r\n    })\r\n    \r\n  },\r\n\r\n  setClear: (state) => {\r\n    state.todoList.splice(0, state.todoList.length);\r\n    localStorage.clear();\r\n  },\r\n\r\n  setVideo: (state,action) => {\r\n    state.todoList.push(action.payload); \r\n    localStorage.setItem(\"state\", JSON.stringify(state.todoList));\r\n  },\r\n\r\n  setSort: (state, action) => {\r\n    state.isSort = action.payload;\r\n  },\r\n\r\n  setVisible: (state,action) => {\r\n    state.isVisible = action.payload;\r\n  },\r\n  setFevorite: (state,action) => {\r\n    state.isFevorite = action.payload;  \r\n  },\r\n\r\n  }\r\n});\r\n\r\nexport const { saveTodo , setCheck , setVideo, setVisible,setFavorite,setClear,setFevorite, setSort } = counterSlice.actions;\r\n\r\nexport const selectTodoList = state => state.todos.todoList\r\nexport const selectIsVisible = state => state.todos.isVisible\r\nexport const selectIsFevorite = state => state.todos.isFevorite\r\nexport const selectIsSort = state => state.todos.isSort\r\n\r\n\r\nexport default counterSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {setClear,  setVideo , setVisible, setFevorite, setSort} from './counterSlice';\r\n\r\nimport './Counter.css';\r\n\r\nexport function Counter() {\r\n  \r\n    const dispatch = useDispatch();\r\n    const [incrementAmount, setIncrementAmount] = useState('');\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const [isFevorite, setIsFevorite] = useState(true);\r\n    const [isSort, setIsSort] = useState(false);\r\n\r\n    const lastPartAfterSign = (str, separator='/') => {\r\n      var stringSarach = str; \r\n      var n = stringSarach.search(separator);\r\n\r\n      if(n === -1){\r\n        return str;\r\n      }\r\n      else {\r\n        let result = str.substring(str.lastIndexOf(separator)+1);\r\n        result =  result !== str ? result : false;\r\n        if(result.length > 11 ) {\r\n          result = str.substring(str.lastIndexOf('=')+1);\r\n          result =  result !== str ? result : false;\r\n        }\r\n        return result;\r\n      } \r\n    }\r\n\r\n    const addTodo = () => {\r\n      let id = lastPartAfterSign(incrementAmount);\r\n      if(id.length <= 9){\r\n        getVimeo(id)\r\n      }else{\r\n        getYoutube(id);\r\n      }\r\n    }\r\n\r\n    const hendledemo = ()  => {\r\n      const demo = [ '181696349' ,'zgLEG16idp4', 'Exnx28DCK7Q', 'xXtTuCpBv8g' , 's0s-6Iekyv8'];\r\n\r\n      for(let i=0;i<demo.length;i++){\r\n        if(demo[i].length <= 9){\r\n          getVimeo(demo[i]);\r\n        }else{\r\n          getYoutube(demo[i]);\r\n        }   \r\n      }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        dispatch(setClear())\r\n    }\r\n\r\n    const changeVisible = () => {\r\n      setIsVisible(!isVisible);\r\n\r\n      dispatch(setVisible ({\r\n        isVisible : isVisible\r\n      }))\r\n    }\r\n\r\n    const handleFevorite = () => {\r\n      setIsFevorite(!isFevorite);\r\n\r\n      dispatch(setFevorite ({\r\n        isFevorite : isFevorite\r\n      }))\r\n    }\r\n\r\n    const handleSort = () => {\r\n      setIsSort(!isSort)\r\n      dispatch(setSort({\r\n        isSort : isSort\r\n      }))\r\n    }\r\n\r\n    const getVimeo = (id) => {\r\n      fetch(`https://vimeo.com/api/v2/video/${id}/json`)\r\n        .then(response => response.json())\r\n        .then(data => \r\n          dispatch(setVideo({\r\n            itemView : data[0].stats_number_of_plays,\r\n            itemLike :  data[0].stats_number_of_likes,\r\n            image: data[0].thumbnail_large,\r\n            imageSmall: data[0].thumbnail_large,\r\n            title : data[0].title,\r\n            published : data[0].upload_date,\r\n            video : lastPartAfterSign(id),\r\n            done: false,\r\n            favorite : false,\r\n            id: Date.now(),\r\n          }))\r\n          );\r\n    }\r\n\r\n    const getYoutube = (id) => {\r\n      fetch(`https://www.googleapis.com/youtube/v3/videos?id=${id}&key=AIzaSyDPQ653rSjnsN9tmexU7CmkDKc5t_2t5Jo&part=snippet,contentDetails,statistics,status`)\r\n      .then(response => response.json())\r\n      .then(data => \r\n        dispatch(setVideo({\r\n          itemView : data.items[0].statistics.viewCount,\r\n          itemLike :  data.items[0].statistics.likeCount,\r\n          image: data.items[0].snippet.thumbnails.medium.url,\r\n          imageSmall: data.items[0].snippet.thumbnails.default.url,\r\n          title : data.items[0].snippet.title,\r\n          published : data.items[0].snippet.publishedAt,\r\n          video :  lastPartAfterSign(incrementAmount),\r\n          done: false,\r\n          favorite : false,\r\n          id: Date.now(),\r\n        }))\r\n      );\r\n    }\r\n\r\n    const x = {\r\n      background: 'grey'\r\n    };\r\n    const y = {\r\n      background: 'red'\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <div className='input'>\r\n    <input type=\"text\" value={incrementAmount} \r\n      onChange={e => setIncrementAmount(e.target.value)} />\r\n       <button \r\n            onClick={addTodo} >\r\n        Add! </button>\r\n    </div>\r\n      <div className=\"buttonActions\">\r\n        <button \r\n            onClick={changeVisible}>\r\n        Visible </button>\r\n        <button \r\n            onClick={handleClear}>\r\n        Clear </button>\r\n        <button \r\n            onClick={hendledemo}>\r\n        Demo </button>\r\n        <button style = {isFevorite ? (x) : (y)}\r\n            onClick={handleFevorite}>\r\n        Favourite </button>\r\n        <button \r\n            onClick={handleSort}>\r\n        Sort </button>\r\n    </div>\r\n</>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport ReactPlayer from 'react-player'\r\nimport Vimeo from '@u-wave/react-vimeo';\r\nimport './Posts.css'\r\n\r\nconst ModalExample = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    url,\r\n    VimeoOrYoutube\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"danger\"  onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n\r\n        {VimeoOrYoutube ? (\r\n            <div className='player-wrapper'>\r\n              <ReactPlayer\r\n                  className='react-player'\r\n                  url= {url}\r\n                  width='100%'\r\n                  height='100%'\r\n              />\r\n            </div>\r\n        ):\r\n        (\r\n            <div className='player-wrapper-vimeo'>\r\n              <Vimeo\r\n                video=\"181696349\"\r\n              />\r\n            </div>\r\n        )}\r\n       \r\n    \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalExample;","import React from 'react'\r\n\r\nimport {setCheck, setFavorite} from './counterSlice'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\nimport ModalExample from \"./reactPlayer\";\r\nimport './Posts.css'\r\n\r\nconst Posts = ({ id, loading , dispatch,image,title , like, view, published ,video, favorite  }) => {\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  const handleCheck = () => {\r\n    dispatch(setCheck(id))\r\n  }\r\n\r\n  const handleFavorite = () => {\r\n      dispatch(setFavorite(id))\r\n  }\r\n\r\n  const favoriteTrue = {\r\n    background: 'red'\r\n  };\r\n  const favoriteFalse = {\r\n    background: 'none',\r\n  };\r\n  \r\n \r\n  let  url,VimeoOrYoutube = true;\r\n  if(video.length <= 9 ) {\r\n    url =  `https://player.vimeo.com/video/58385453?badge=0`;\r\n    VimeoOrYoutube = false;\r\n  }\r\n  else{\r\n    url =  `https://www.youtube.com/watch?v=${video}`;\r\n    VimeoOrYoutube = true;\r\n  }\r\n\r\n\r\n  return (\r\n  <>\r\n    <ul className='list-group mb-4'>\r\n      <li className='list-group-item'>\r\n      <Container>\r\n        <Row> \r\n          <Col sm={3}>\r\n              <div className=\"outside\">\r\n                <div className=\"inside\">\r\n                    <img className=\"thumbnail\" src={image} alt=\"BigCo Inc. logo\" /> \r\n                </div>\t\t\r\n              </div>\r\n            </Col>\r\n\r\n            <Col sm={7}>\r\n              <h5>{title}</h5>\r\n              <h6>{like}</h6>\r\n              <h6>{view}</h6>\r\n              <h6>{published}</h6>\r\n            </Col>\r\n\r\n            <Col sm={2}>\r\n              <button onClick={handleCheck}>Delete</button>\r\n              <button onClick={handleFavorite} style={favorite ? (favoriteTrue) : (favoriteFalse)}>Favourite</button>\r\n              <ModalExample buttonLabel={'Show!'} url={url} VimeoOrYoutube={VimeoOrYoutube}/>\r\n            </Col> \r\n        </Row> \r\n      </Container>\r\n      </li>\r\n    </ul>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Posts;","import React from 'react'\r\nimport {setCheck, setFavorite} from './counterSlice'\r\n\r\nimport {\r\n    Card, CardImg, CardTitle, CardText, CardGroup,\r\n    CardSubtitle, CardBody\r\n  } from 'reactstrap';\r\n\r\nimport { Col } from 'react-grid-system';\r\nimport ModalExample from \"./reactPlayer\";\r\n\r\n\r\nconst Tiles = ({ id, loading , dispatch,image,title , like, view, published,video,favorite }) => {\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  const handleCheck = () => {\r\n    dispatch(setCheck(id))\r\n  }\r\n  \r\n  const handleFavorite = () => {\r\n      dispatch(setFavorite(id))\r\n  }\r\n  \r\n  let  url,VimeoOrYoutube = true;\r\n    if(video.length <= 9 ){\r\n        url =  `https://player.vimeo.com/video/58385453?badge=0`;\r\n        VimeoOrYoutube = false;\r\n    }\r\n    else{\r\n      url =  `https://www.youtube.com/watch?v=${video}`;\r\n      VimeoOrYoutube = true;\r\n    }\r\n\r\n    const favoriteTrue = {\r\n      background: 'red'\r\n    };\r\n    const favoriteFalse = {\r\n      background: 'none'\r\n    };\r\n\r\n\r\n  return (\r\n    <>  \r\n      <Col  sm={6} >\r\n          <CardGroup>\r\n          <Card>\r\n              <CardImg top src={image}  alt=\"Card image cap\" />\r\n              <CardBody>\r\n              <CardTitle tag=\"h5\">{title}</CardTitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Published Data : {published}</CardSubtitle>\r\n              <CardText>View : {view} Like : {like}</CardText>\r\n              <button onClick={handleCheck}>Delete</button>\r\n              <button onClick={handleFavorite} style={favorite ? (favoriteTrue) : (favoriteFalse)}>Favourite</button>\r\n              <ModalExample buttonLabel={'Show!'} url={url} VimeoOrYoutube={VimeoOrYoutube}/>\r\n              </CardBody>\r\n      </Card>\r\n      </CardGroup>\r\n      </Col> \r\n    </>      \r\n  );\r\n  \r\n};\r\n\r\nexport default Tiles;","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul  className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)}  className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {useState, useEffect} from 'react'\r\n\r\nimport './TodoItem.css'\r\n\r\nimport Posts from './Posts';\r\nimport Tiles from './Tiles';\r\nimport Pagination from './Pagination';\r\n\r\nimport { Container, Row } from 'react-grid-system';\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nconst TodoItem = ({list, isVisible , isFevorite, isSort}) => {\r\n  \r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    const [postsPerPageTiles] = useState(4);\r\n\r\n    useEffect(() => {\r\n      const fetchPosts = async () => {\r\n      setLoading(true);\r\n      setPosts(list);  \r\n      setLoading(false);\r\n      };\r\n\r\n      fetchPosts();\r\n    });\r\n\r\n  \r\n    const objectMap = (obj, fn) =>\r\n    Object.fromEntries(\r\n      Object.entries(obj).map(\r\n        ([k, v], i) => [k, fn(v, k, i)] \r\n      )\r\n    )\r\n        \r\n    function clean(obj) {\r\n      for (var propName in obj) {\r\n        if (obj[propName] === null || obj[propName] === undefined) {\r\n          delete obj[propName];\r\n        }\r\n      }\r\n      return obj\r\n    }\r\n\r\n    const obj = clean(objectMap(posts, v => isFevorite ?  v.favorite ? v : null : v));\r\n\r\n    function dynamicSort(property) {\r\n      var sortOrder = 1;\r\n      if(property[0] === \"-\") {\r\n          sortOrder = -1;\r\n          property = property.substr(1);\r\n      }\r\n      return function (a,b) {\r\n          var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n          return result * sortOrder;\r\n      }\r\n    }\r\n\r\n    var obj1;\r\n    isSort ? obj1 = Object.values(obj).sort(dynamicSort(\"published\")) : obj1 = obj;\r\n\r\n    const dispatch = useDispatch();\r\n    let fevoriteAmoutn = 0;\r\n\r\n    for(let i = 0; i<Object.values(obj1).length;i++){\r\n      if(Object.values(obj1)[i].favorite  === true) {\r\n          fevoriteAmoutn++;\r\n      }\r\n    }\r\n\r\n    let totalPosts = isFevorite ? fevoriteAmoutn : Object.values(obj1).length;\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = Object.values(obj1).slice(indexOfFirstPost, indexOfLastPost);\r\n    \r\n    const indexOfLastPostTiles = currentPage * postsPerPageTiles;\r\n    const indexOfFirstPostTiles = indexOfLastPostTiles - postsPerPageTiles;\r\n    const currentPostsTiles = Object.values(obj1).slice(indexOfFirstPostTiles, indexOfLastPostTiles);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n    <>\r\n    {\r\n      isVisible ? (\r\n        <div className='container mt-5'>\r\n          {currentPosts.map(post => (\r\n            <Posts \r\n              key={post.id} \r\n              id={post.id}\r\n              loading={loading}\r\n              dispatch={dispatch}\r\n              image={post.image} \r\n              title={post.title} \r\n              like={post.itemLike} \r\n              view={post.itemView}\r\n              published={post.published}    \r\n              favorite={post.favorite}\r\n              video={post.video}\r\n              isFevorite={isFevorite}\r\n              />\r\n            ))}\r\n                  \r\n            <Pagination \r\n                postsPerPage={postsPerPage}\r\n                totalPosts={totalPosts}\r\n                paginate={paginate}\r\n            />\r\n        </div>\r\n        )\r\n        :\r\n        (\r\n        <>\r\n          <Container>\r\n          <Row> \r\n            {currentPostsTiles.map(post => (\r\n                <Tiles \r\n                key={post.id} \r\n                id={post.id}\r\n                loading={loading} \r\n                dispatch={dispatch} \r\n                image={post.image} \r\n                title={post.title} \r\n                like={post.itemLike} \r\n                view={post.itemView}\r\n                published={post.published}  \r\n                favorite={post.favorite}\r\n                video={post.video}\r\n                isFevorite={isFevorite}\r\n                />\r\n            ))}\r\n          </Row>\r\n          </Container> \r\n            <Pagination className=\"pagination\"\r\n                    postsPerPage={postsPerPageTiles}\r\n                    totalPosts={totalPosts}\r\n                    paginate={paginate}\r\n                />\r\n        </>\r\n        )\r\n    }\r\n    </>\r\n    );\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport TodoItem from './features/counter/TodoItem';\r\n\r\nimport {useSelector} from 'react-redux'\r\nimport {selectTodoList} from './features/counter/counterSlice'\r\nimport {selectIsVisible} from './features/counter/counterSlice'\r\nimport {selectIsFevorite} from './features/counter/counterSlice'\r\nimport {selectIsSort} from './features/counter/counterSlice'\r\n\r\nrequire('dotenv').config();\r\n\r\nfunction App() {\r\n  const todoList = useSelector(selectTodoList);\r\n  const isVisible = useSelector(selectIsVisible);\r\n  const isFevorite = useSelector(selectIsFevorite);\r\n  const isSort = useSelector(selectIsSort);\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n     <Counter />\r\n          <TodoItem list={todoList} isVisible={isVisible.isVisible} isFevorite={isFevorite.isFevorite} isSort={isSort.isSort}/>\r\n       </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    todos: counterReducer,\r\n  },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}