{"version":3,"sources":["logo.svg","features/counter/reactPlayer.js","features/counter/Posts.js","features/counter/Tiles.js","features/counter/Pagination.js","features/counter/TodoItem.js","features/counter/counterSlice.js","features/counter/Counter.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["ModalExample","props","buttonLabel","className","url","VimeoOrYoutube","useState","modal","setModal","toggle","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","width","height","video","ModalFooter","Posts","id","loading","dispatch","image","title","like","view","published","favorite","length","sm","src","alt","setCheck","setFavorite","style","background","Tiles","CardGroup","Card","CardImg","top","CardBody","CardTitle","tag","CardSubtitle","CardText","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","TodoItem","list","isVisible","isFevorite","isSort","posts","setPosts","setLoading","currentPage","setCurrentPage","postsPerPageTiles","useEffect","a","fetchPosts","obj1","obj","propName","undefined","clean","fn","Object","fromEntries","entries","k","v","objectMap","values","sort","property","sortOrder","substr","b","dynamicSort","useDispatch","fevoriteAmoutn","indexOfLastPost","indexOfFirstPost","currentPosts","slice","indexOfLastPostTiles","indexOfFirstPostTiles","currentPostsTiles","pageNumber","post","itemLike","itemView","data","localStorage","getItem","initialState","todoList","JSON","parse","counterSlice","createSlice","name","reducers","state","action","x","item","payload","splice","setClear","clear","setVideo","setItem","stringify","setSort","setVisible","setFevorite","actions","saveTodo","selectTodoList","todos","selectIsVisible","selectIsFevorite","selectIsSort","Counter","incrementAmount","setIncrementAmount","setIsVisible","setIsFevorite","setIsSort","lastPartAfterSign","str","separator","stringSarach","n","search","result","substring","lastIndexOf","getVimeo","fetch","then","response","json","stats_number_of_plays","stats_number_of_likes","thumbnail_large","imageSmall","upload_date","done","Date","now","getYoutube","process","REACT_APP_GOOGLE_API_KEY","items","statistics","viewCount","likeCount","snippet","thumbnails","medium","default","publishedAt","type","value","onChange","e","target","demo","require","config","App","useSelector","console","log","API_KEY","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.968c6ebf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport ReactPlayer from 'react-player'\r\nimport Vimeo from '@u-wave/react-vimeo';\r\nimport './Posts.css'\r\n\r\nconst ModalExample = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    url,\r\n    VimeoOrYoutube\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"danger\"  onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n\r\n        {VimeoOrYoutube ? (\r\n            <div className='player-wrapper'>\r\n              <ReactPlayer\r\n                  className='react-player'\r\n                  url= {url}\r\n                  width='100%'\r\n                  height='100%'\r\n              />\r\n            </div>\r\n        ):\r\n        (\r\n            <div className='player-wrapper-vimeo'>\r\n              <Vimeo\r\n                video=\"181696349\"\r\n              />\r\n            </div>\r\n        )}\r\n       \r\n    \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalExample;","import React,{useState} from 'react'\r\n\r\nimport {setCheck, setFavorite} from './counterSlice'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\nimport ModalExample from \"./reactPlayer\";\r\n\r\n\r\nimport './Posts.css'\r\n\r\nconst Posts = ({ id, loading , dispatch,image,title , like, view, published ,video, favorite  }) => {\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  const handleCheck = () => {\r\n    dispatch(setCheck(id))\r\n  }\r\n\r\n  const handleFavorite = () => {\r\n      dispatch(setFavorite(id))\r\n  }\r\n\r\n  const favoriteTrue = {\r\n    background: 'red'\r\n  };\r\n  const favoriteFalse = {\r\n    background: 'none',\r\n  };\r\n  \r\n \r\n  let  url,VimeoOrYoutube = true;\r\n  if(video.length <= 9 ) {\r\n    url =  `https://player.vimeo.com/video/58385453?badge=0`;\r\n    VimeoOrYoutube = false;\r\n  }\r\n  else{\r\n    url =  `https://www.youtube.com/watch?v=${video}`;\r\n    VimeoOrYoutube = true;\r\n  }\r\n\r\n  const x = {\r\n    display: 'none'\r\n  };\r\n  const y = {\r\n    display: 'block'\r\n  };\r\n\r\n  return (\r\n  <>\r\n    <ul className='list-group mb-4'>\r\n      <li className='list-group-item'>\r\n      <Container>\r\n        <Row> \r\n          <Col sm={3}>\r\n              <div className=\"outside\">\r\n                <div className=\"inside\">\r\n                    <img className=\"thumbnail\" src={image} alt=\"BigCo Inc. logo\" /> \r\n                </div>\t\t\r\n              </div>\r\n            </Col>\r\n\r\n            <Col sm={7}>\r\n              <h5>{title}</h5>\r\n              <h6>{like}</h6>\r\n              <h6>{view}</h6>\r\n              <h6>{published}</h6>\r\n            </Col>\r\n\r\n            <Col sm={2}>\r\n              <button onClick={handleCheck}>Usuń</button>\r\n              <button onClick={handleFavorite} style={favorite ? (favoriteTrue) : (favoriteFalse)}>Ulubione</button>\r\n              <ModalExample buttonLabel={'Zobacz!'} url={url} VimeoOrYoutube={VimeoOrYoutube}/>\r\n            </Col> \r\n        </Row> \r\n      </Container>\r\n      </li>\r\n    </ul>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Posts;","import React, {useState} from 'react'\r\nimport {setCheck, setVideo, setFavorite} from './counterSlice'\r\n\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText, CardGroup,\r\n    CardSubtitle, CardBody\r\n  } from 'reactstrap';\r\n\r\nimport { Col } from 'react-grid-system';\r\nimport ModalExample from \"./reactPlayer\";\r\n\r\n\r\nconst Tiles = ({ id, loading , dispatch,image,title , like, view, published,video,favorite }) => {\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  const handleCheck = () => {\r\n    dispatch(setCheck(id))\r\n  }\r\n  \r\n  const handleFavorite = () => {\r\n      dispatch(setFavorite(id))\r\n  }\r\n  \r\n  let  url,VimeoOrYoutube = true;\r\n    if(video.length <= 9 ){\r\n        url =  `https://player.vimeo.com/video/58385453?badge=0`;\r\n        VimeoOrYoutube = false;\r\n    }\r\n    else{\r\n      url =  `https://www.youtube.com/watch?v=${video}`;\r\n      VimeoOrYoutube = true;\r\n    }\r\n\r\n    const favoriteTrue = {\r\n      background: 'red'\r\n    };\r\n    const favoriteFalse = {\r\n      background: 'none'\r\n    };\r\n\r\n    const x = {\r\n      display: 'none'\r\n    };\r\n    const y = {\r\n      display: 'block'\r\n    };\r\n    \r\n\r\n  return (\r\n    <>  \r\n      <Col  sm={6} >\r\n          <CardGroup>\r\n          <Card>\r\n              <CardImg top src={image}  alt=\"Card image cap\" />\r\n              <CardBody>\r\n              <CardTitle tag=\"h5\">{title}</CardTitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Published Data : {published}</CardSubtitle>\r\n              <CardText>View : {view} Like : {like}</CardText>\r\n              <button onClick={handleCheck}>Usuń</button>\r\n              <button onClick={handleFavorite} style={favorite ? (favoriteTrue) : (favoriteFalse)}>Ulubione</button>\r\n              <ModalExample buttonLabel={'Zobacz!'} url={url} VimeoOrYoutube={VimeoOrYoutube}/>\r\n              </CardBody>\r\n      </Card>\r\n      </CardGroup>\r\n      </Col> \r\n    </>      \r\n  );\r\n  \r\n};\r\n\r\nexport default Tiles;","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul  className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)}  className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport './TodoItem.css'\r\n\r\nimport Posts from './Posts';\r\nimport Tiles from './Tiles';\r\nimport Pagination from './Pagination';\r\n\r\n\r\n\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nconst TodoItem = ({list, isVisible , isFevorite, isSort}) => {\r\n  \r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    const [postsPerPageTiles] = useState(4);\r\n\r\n    useEffect(() => {\r\n      const fetchPosts = async () => {\r\n      setLoading(true);\r\n      setPosts(list);  \r\n      setLoading(false);\r\n      };\r\n\r\n      fetchPosts();\r\n    });\r\n\r\n  \r\n    const objectMap = (obj, fn) =>\r\n    Object.fromEntries(\r\n      Object.entries(obj).map(\r\n        ([k, v], i) => [k, fn(v, k, i)] \r\n      )\r\n    )\r\n        \r\n    function clean(obj) {\r\n      for (var propName in obj) {\r\n        if (obj[propName] === null || obj[propName] === undefined) {\r\n          delete obj[propName];\r\n        }\r\n      }\r\n      return obj\r\n    }\r\n\r\n    const obj = clean(objectMap(posts, v => isFevorite ?  v.favorite ? v : null : v));\r\n\r\n    function dynamicSort(property) {\r\n      var sortOrder = 1;\r\n      if(property[0] === \"-\") {\r\n          sortOrder = -1;\r\n          property = property.substr(1);\r\n      }\r\n      return function (a,b) {\r\n          var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n          return result * sortOrder;\r\n      }\r\n    }\r\n\r\n    var obj1;\r\n    isSort ? obj1 = Object.values(obj).sort(dynamicSort(\"published\")) : obj1 = obj;\r\n\r\n    const dispatch = useDispatch();\r\n    let fevoriteAmoutn = 0;\r\n\r\n    for(let i = 0; i<Object.values(obj1).length;i++){\r\n      if(Object.values(obj1)[i].favorite  === true) {\r\n          fevoriteAmoutn++;\r\n      }\r\n    }\r\n\r\n    let totalPosts = isFevorite ? fevoriteAmoutn : Object.values(obj1).length;\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = Object.values(obj1).slice(indexOfFirstPost, indexOfLastPost);\r\n    \r\n    const indexOfLastPostTiles = currentPage * postsPerPageTiles;\r\n    const indexOfFirstPostTiles = indexOfLastPostTiles - postsPerPageTiles;\r\n    const currentPostsTiles = Object.values(obj1).slice(indexOfFirstPostTiles, indexOfLastPostTiles);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n    <>\r\n    {\r\n      isVisible ? (\r\n        <div className='container mt-5'>\r\n          {currentPosts.map(post => (\r\n            <Posts \r\n              key={post.id} \r\n              id={post.id}\r\n              loading={loading}\r\n              dispatch={dispatch}\r\n              image={post.image} \r\n              title={post.title} \r\n              like={post.itemLike} \r\n              view={post.itemView}\r\n              published={post.published}    \r\n              favorite={post.favorite}\r\n              video={post.video}\r\n              isFevorite={isFevorite}\r\n              />\r\n            ))}\r\n                  \r\n            <Pagination \r\n                postsPerPage={postsPerPage}\r\n                totalPosts={totalPosts}\r\n                paginate={paginate}\r\n            />\r\n        </div>\r\n        )\r\n        :\r\n        (\r\n        <>\r\n          <Container>\r\n          <Row> \r\n            {currentPostsTiles.map(post => (\r\n                <Tiles \r\n                key={post.id} \r\n                id={post.id}\r\n                loading={loading} \r\n                dispatch={dispatch} \r\n                image={post.image} \r\n                title={post.title} \r\n                like={post.itemLike} \r\n                view={post.itemView}\r\n                published={post.published}  \r\n                favorite={post.favorite}\r\n                video={post.video}\r\n                isFevorite={isFevorite}\r\n                />\r\n            ))}\r\n          </Row>\r\n          </Container> \r\n            <Pagination className=\"pagination\"\r\n                    postsPerPage={postsPerPageTiles}\r\n                    totalPosts={totalPosts}\r\n                    paginate={paginate}\r\n                />\r\n        </>\r\n        )\r\n    }\r\n    </>\r\n    );\r\n}\r\n\r\nexport default TodoItem","import { createSlice } from '@reduxjs/toolkit';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst data = localStorage.getItem(\"state\");\r\n\r\nconst initialState = {\r\n  todoList: data ? JSON.parse(data) : [],\r\n  isVisible: 0,\r\n  isFevorite : false,\r\n  isSort : false,\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'x',\r\n  initialState,\r\n  reducers: {     \r\n    \r\n  setCheck: (state,action) => {\r\n    let x=0;\r\n      state.todoList.map(item => {\r\n        if(action.payload === item.id){\r\n          state.todoList.splice(x,1);\r\n        }\r\n        x++;\r\n      })\r\n  },\r\n\r\n  setFavorite:(state,action) => {\r\n    let x=0;\r\n    state.todoList.map(item => {\r\n      if(action.payload === item.id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      x++;\r\n    })\r\n    \r\n  },\r\n\r\n  setClear: (state) => {\r\n    state.todoList.splice(0, state.todoList.length);\r\n    localStorage.clear();\r\n  },\r\n\r\n  setVideo: (state,action) => {\r\n    state.todoList.push(action.payload); \r\n    localStorage.setItem(\"state\", JSON.stringify(state.todoList));\r\n  },\r\n\r\n  setSort: (state, action) => {\r\n    state.isSort = action.payload;\r\n  },\r\n\r\n  setVisible: (state,action) => {\r\n    state.isVisible = action.payload;\r\n  },\r\n  setFevorite: (state,action) => {\r\n    state.isFevorite = action.payload;  \r\n  },\r\n\r\n  }\r\n});\r\n\r\nexport const { saveTodo , setCheck , setVideo, setVisible,setFavorite,setClear,setFevorite, setSort } = counterSlice.actions;\r\n\r\nexport const selectTodoList = state => state.todos.todoList\r\nexport const selectIsVisible = state => state.todos.isVisible\r\nexport const selectIsFevorite = state => state.todos.isFevorite\r\nexport const selectIsSort = state => state.todos.isSort\r\n\r\n\r\nexport default counterSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {setClear,  setVideo , setVisible, setFevorite, setSort} from './counterSlice';\r\n\r\nimport './Counter.css';\r\n\r\nexport function Counter() {\r\n  \r\n    const dispatch = useDispatch();\r\n    const [incrementAmount, setIncrementAmount] = useState('');\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const [isFevorite, setIsFevorite] = useState(true);\r\n    const [isSort, setIsSort] = useState(false);\r\n\r\n    const lastPartAfterSign = (str, separator='/') => {\r\n      var stringSarach = str; \r\n      var n = stringSarach.search(separator);\r\n\r\n      if(n === -1){\r\n        return str;\r\n      }\r\n      else {\r\n        let result = str.substring(str.lastIndexOf(separator)+1);\r\n        result =  result != str ? result : false;\r\n        if(result.length > 11 ) {\r\n          result = str.substring(str.lastIndexOf('=')+1);\r\n          result =  result != str ? result : false;\r\n        }\r\n        return result;\r\n      } \r\n    }\r\n\r\n    const addTodo = () => {\r\n      let id = lastPartAfterSign(incrementAmount);\r\n      if(id.length <= 9){\r\n        getVimeo(id)\r\n      }else{\r\n        getYoutube(id);\r\n      }\r\n    }\r\n\r\n    const hendledemo = ()  => {\r\n      const demo = [ '181696349' ,'zgLEG16idp4', 'Exnx28DCK7Q', 'xXtTuCpBv8g' , 's0s-6Iekyv8'];\r\n\r\n      for(let i=0;i<demo.length;i++){\r\n        if(demo[i].length <= 9){\r\n          getVimeo(demo[i]);\r\n        }else{\r\n          getYoutube(demo[i]);\r\n        }   \r\n      }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        dispatch(setClear())\r\n    }\r\n\r\n    const changeVisible = () => {\r\n      setIsVisible(!isVisible);\r\n\r\n      dispatch(setVisible ({\r\n        isVisible : isVisible\r\n      }))\r\n    }\r\n\r\n    const handleFevorite = () => {\r\n      setIsFevorite(!isFevorite);\r\n\r\n      dispatch(setFevorite ({\r\n        isFevorite : isFevorite\r\n      }))\r\n    }\r\n\r\n    const handleSort = () => {\r\n      setIsSort(!isSort)\r\n      dispatch(setSort({\r\n        isSort : isSort\r\n      }))\r\n    }\r\n\r\n    const getVimeo = (id) => {\r\n      fetch(`https://vimeo.com/api/v2/video/${id}/json`)\r\n        .then(response => response.json())\r\n        .then(data => \r\n          dispatch(setVideo({\r\n            itemView : data[0].stats_number_of_plays,\r\n            itemLike :  data[0].stats_number_of_likes,\r\n            image: data[0].thumbnail_large,\r\n            imageSmall: data[0].thumbnail_large,\r\n            title : data[0].title,\r\n            published : data[0].upload_date,\r\n            video : lastPartAfterSign(id),\r\n            done: false,\r\n            favorite : false,\r\n            id: Date.now(),\r\n          }))\r\n          );\r\n    }\r\n\r\n    const getYoutube = (id) => {\r\n      fetch(`https://www.googleapis.com/youtube/v3/videos?id=${id}&key=${process.env.REACT_APP_GOOGLE_API_KEY}&part=snippet,contentDetails,statistics,status`)\r\n      .then(response => response.json())\r\n      .then(data => \r\n        dispatch(setVideo({\r\n          itemView : data.items[0].statistics.viewCount,\r\n          itemLike :  data.items[0].statistics.likeCount,\r\n          image: data.items[0].snippet.thumbnails.medium.url,\r\n          imageSmall: data.items[0].snippet.thumbnails.default.url,\r\n          title : data.items[0].snippet.title,\r\n          published : data.items[0].snippet.publishedAt,\r\n          video : lastPartAfterSign(id),\r\n          done: false,\r\n          favorite : false,\r\n          id: Date.now(),\r\n        }))\r\n      );\r\n    }\r\n\r\n    const x = {\r\n      background: 'grey'\r\n    };\r\n    const y = {\r\n      background: 'red'\r\n    };\r\n\r\n  return (\r\n    <div className='input'>\r\n    <input type=\"text\" value={incrementAmount} \r\n      onChange={e => setIncrementAmount(e.target.value)} />\r\n    <button \r\n        onClick={addTodo} >\r\n    Add! </button>\r\n    <button \r\n        onClick={changeVisible}>\r\n    Visible </button>\r\n    <button \r\n        onClick={handleClear}>\r\n    Clear </button>\r\n    <button \r\n        onClick={hendledemo}>\r\n    Demo </button>\r\n    <button style = {isFevorite ? (x) : (y)}\r\n        onClick={handleFevorite}>\r\n    Fev </button>\r\n    <button \r\n        onClick={handleSort}>\r\n    Sort </button>\r\n</div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport TodoItem from './features/counter/TodoItem';\r\nimport Posts from './features/counter/Posts';\r\n\r\nimport {useSelector} from 'react-redux'\r\nimport {selectTodoList} from './features/counter/counterSlice'\r\nimport {selectIsVisible} from './features/counter/counterSlice'\r\nimport {selectIsFevorite} from './features/counter/counterSlice'\r\nimport {selectIsSort} from './features/counter/counterSlice'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\nrequire('dotenv').config();\r\n\r\nfunction App() {\r\n  const todoList = useSelector(selectTodoList);\r\n  const isVisible = useSelector(selectIsVisible);\r\n  const isFevorite = useSelector(selectIsFevorite);\r\n  const isSort = useSelector(selectIsSort);\r\n\r\n  console.log(process.env.API_KEY);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n     <Counter />\r\n          <TodoItem list={todoList} isVisible={isVisible.isVisible} isFevorite={isFevorite.isFevorite} isSort={isSort.isSort}/>\r\n       </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    todos: counterReducer,\r\n  },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}