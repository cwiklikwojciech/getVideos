{"version":3,"sources":["logo.svg","features/counter/reactPlayer.js","features/counter/Posts.js","features/counter/Tiles.js","features/counter/Pagination.js","features/counter/TodoItem.js","features/counter/counterSlice.js","features/counter/Counter.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["ModalExample","props","buttonLabel","className","url","VimeoOrYoutube","useState","modal","setModal","toggle","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","width","height","video","ModalFooter","Posts","id","loading","dispatch","image","title","like","view","published","favorite","length","sm","src","alt","setCheck","setFavorite","style","background","Tiles","isFevorite","display","CardGroup","Card","CardImg","top","CardBody","CardTitle","tag","CardSubtitle","CardText","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","TodoItem","list","isVisible","setPosts","setLoading","currentPage","setCurrentPage","postsPerPageTiles","useEffect","a","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","indexOfLastPostTiles","indexOfFirstPostTiles","currentPostsTiles","pageNumber","useDispatch","fevoriteAmoutn","post","itemLike","itemView","counterSlice","createSlice","name","initialState","todoList","reducers","state","action","x","item","payload","splice","setClear","setVideo","setVisible","setFevorite","actions","saveTodo","selectTodoList","todos","selectIsVisible","selectIsFevorite","Counter","incrementAmount","setIncrementAmount","setIsVisible","setIsFevorite","lastPartAfterSign","str","separator","stringSarach","n","search","result","substring","lastIndexOf","getVimeo","fetch","then","response","json","data","stats_number_of_plays","stats_number_of_likes","thumbnail_large","imageSmall","upload_date","done","Date","now","getYoutube","items","statistics","viewCount","likeCount","snippet","thumbnails","medium","default","publishedAt","type","value","onChange","e","target","demo","App","useSelector","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22d8b652.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport ReactPlayer from 'react-player'\r\nimport Vimeo from '@u-wave/react-vimeo';\r\nimport './Posts.css'\r\n\r\nconst ModalExample = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    url,\r\n    VimeoOrYoutube\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n//   const url = `https://www.youtube.com/watch?v=${video}`\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"danger\"  onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n\r\n        {VimeoOrYoutube ? (\r\n            <div className='player-wrapper'>\r\n            <ReactPlayer\r\n                className='react-player'\r\n                url= {url}\r\n                width='100%'\r\n                height='100%'\r\n            />\r\n        </div>\r\n        ):\r\n        (\r\n            <div className='player-wrapper-vimeo'>\r\n            <Vimeo\r\n            video=\"181696349\"\r\n            />\r\n            </div>\r\n        )}\r\n       \r\n    \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalExample;","import React,{useState} from 'react'\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport ModalVideo from 'react-modal-video'\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport {setCheck, setVideo, setFavorite} from './counterSlice'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\nimport ReactPlayer from 'react-player'\r\nimport ModalExample from \"./reactPlayer\";\r\n\r\n\r\nimport './Posts.css'\r\n\r\nconst Posts = ({ id, loading , dispatch,image,title , like, view, published ,video, favorite  }) => {\r\n  const [isOpen, setOpen] = useState(false)\r\n \r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n\r\n  const handleCheck = () => {\r\n    dispatch(setCheck(id))\r\n    }\r\n\r\n  const handleFavorite = () => {\r\n      dispatch(setFavorite(id))\r\n  }\r\n\r\n  const favoriteTrue = {\r\n    background: 'red'\r\n  };\r\n  const favoriteFalse = {\r\n    background: 'none',\r\n  };\r\n  \r\n \r\n    let  url,VimeoOrYoutube = true;\r\n    if(video.length <= 9 ) {\r\n        url =  `https://player.vimeo.com/video/58385453?badge=0`;\r\n        VimeoOrYoutube = false;\r\n      }else{\r\n      url =  `https://www.youtube.com/watch?v=${video}`;\r\n      VimeoOrYoutube = true;\r\n      }\r\n\r\n  return (\r\n    <>\r\n  \r\n    <ul className='list-group mb-4' >\r\n     <li className='list-group-item'>\r\n     <Container>\r\n         <Row> \r\n      <Col sm={3}>\r\n\r\n      \r\n      <div className=\"outside\">\r\n        <div className=\"inside\">\r\n       \r\n        <img className=\"thumbnail\" src={image} alt=\"BigCo Inc. logo\" /> \r\n\r\n        \r\n      \r\n        </div>\t\t\r\n    </div>\r\n      \r\n      </Col>\r\n      <Col sm={7}>\r\n        <h5>{title}</h5>\r\n        <h6>{like}</h6>\r\n        <h6>{view}</h6>\r\n        <h6>{published}</h6>\r\n       \r\n      </Col>\r\n      <Col sm={2}>\r\n        <button onClick={handleCheck}>Usuń</button>\r\n        <button onClick={handleFavorite} style={favorite ? (favoriteTrue) : (favoriteFalse)}>Ulubione</button>\r\n        <ModalExample buttonLabel={'Zobacz!'} url={url} VimeoOrYoutube={VimeoOrYoutube}/>\r\n  \r\n\r\n        \r\n      </Col>\r\n    \r\n     \r\n      </Row> \r\n        </Container>\r\n    \r\n    </li>\r\n     \r\n    </ul>\r\n\r\n   \r\n            </>\r\n  );\r\n};\r\n\r\nexport default Posts;","import React, {useState} from 'react'\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport {setCheck, setVideo, setFavorite} from './counterSlice'\r\n\r\nimport ReactPlayer from 'react-player'\r\n\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText, CardGroup,\r\n    CardSubtitle, CardBody\r\n  } from 'reactstrap';\r\n\r\n  import { Col } from 'react-grid-system';\r\n\r\n  import ModalVideo from 'react-modal-video'\r\n  import ModalExample from \"./reactPlayer\";\r\n\r\n\r\nconst Tiles = ({ id, loading , dispatch,image,title , like, view, published,video,favorite, isFevorite }) => {\r\n\r\n  const [isOpen, setOpen] = useState(true)\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n\r\n    const handleCheck = () => {\r\n        dispatch(setCheck(id))\r\n        }\r\n\r\n    const handleFavorite = () => {\r\n        dispatch(setFavorite(id))\r\n    }\r\n  \r\n    let  url,VimeoOrYoutube = true;\r\n    if(video.length <= 9 ) {\r\n        url =  `https://player.vimeo.com/video/58385453?badge=0`;\r\n        VimeoOrYoutube = false;\r\n      }else{\r\n      url =  `https://www.youtube.com/watch?v=${video}`;\r\n      VimeoOrYoutube = true;\r\n      }\r\n\r\n      const favoriteTrue = {\r\n        background: 'red'\r\n      };\r\n      const favoriteFalse = {\r\n        background: 'none'\r\n      };\r\n\r\n      const x = {\r\n        display: 'none'\r\n      };\r\n      const y = {\r\n        display: 'block'\r\n      };\r\n    \r\n\r\n  return (\r\n    <>\r\n                    <Col  sm={6} style={favorite && isFevorite ? (x) : (y)}>\r\n                       <CardGroup>\r\n                        <Card>\r\n                            <CardImg top src={image}  alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{title}</CardTitle>\r\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Published Data : {published}</CardSubtitle>\r\n                            <CardText>View : {view} Like : {like}</CardText>\r\n                            <button onClick={handleCheck}>Usuń</button>\r\n                            <button onClick={handleFavorite} style={favorite ? (favoriteFalse) : (favoriteTrue)}>Ulubione</button>\r\n                            <ModalExample buttonLabel={'Zobacz!'} url={url} VimeoOrYoutube={VimeoOrYoutube}/>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </CardGroup>\r\n                        \r\n                        </Col> \r\n                        \r\n                  </>      \r\n  );\r\n  \r\n};\r\n\r\nexport default Tiles;","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul  className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)}  className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport './TodoItem.css'\r\n\r\nimport Posts from './Posts';\r\nimport Tiles from './Tiles';\r\nimport Pagination from './Pagination';\r\n\r\n\r\n\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nconst TodoItem = ({list, isVisible , isFevorite}) => {\r\n    \r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    const [postsPerPageTiles] = useState(4);\r\n\r\n   \r\n  \r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n          setLoading(true);\r\n          setPosts(list);\r\n          setLoading(false);\r\n        };\r\n    \r\n        fetchPosts();\r\n      }, []);\r\n\r\n      const indexOfLastPost = currentPage * postsPerPage;\r\n      const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n      const currentPosts = list.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n      const indexOfLastPostTiles = currentPage * postsPerPageTiles;\r\n      const indexOfFirstPostTiles = indexOfLastPostTiles - postsPerPageTiles;\r\n      const currentPostsTiles = list.slice(indexOfFirstPostTiles, indexOfLastPostTiles);\r\n\r\n      const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n      const dispatch = useDispatch();\r\n      let fevoriteAmoutn = 0;\r\n      for(let i = 0; i<list.length;i++){\r\n        if(list[i].favorite && isFevorite === true) {\r\n            fevoriteAmoutn++;\r\n        }\r\n      }\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    {\r\n            isVisible ?  (\r\n                <div className='container mt-5'>\r\n                {currentPosts.map(post => (\r\n                   <Posts \r\n                     key={post.id} \r\n                     id={post.id}\r\n                     loading={loading}\r\n                     dispatch={dispatch}\r\n                     image={post.image} \r\n                     title={post.title} \r\n                     like={post.itemLike} \r\n                     view={post.itemView}\r\n                     published={post.published}    \r\n                     favorite={post.favorite}\r\n                     video={post.video}\r\n                     isFevorite={isFevorite}\r\n                     />\r\n                ))}\r\n                \r\n                <Pagination \r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={list.length }\r\n                    paginate={paginate}\r\n                />\r\n                </div>\r\n            )\r\n            :\r\n            (\r\n                <>\r\n            <Container>\r\n            <Row> \r\n              \r\n               {currentPostsTiles.map(post => (\r\n                    <Tiles \r\n                    key={post.id} \r\n                    id={post.id}\r\n                    loading={loading} \r\n                    dispatch={dispatch} \r\n                    image={post.image} \r\n                    title={post.title} \r\n                    like={post.itemLike} \r\n                    view={post.itemView}\r\n                    published={post.published}  \r\n                    favorite={post.favorite}\r\n                    video={post.video}\r\n                    isFevorite={isFevorite}\r\n                    />\r\n                ))}\r\n\r\n            </Row>\r\n            </Container> \r\n\r\n            <Pagination className=\"pagination\"\r\n                    postsPerPage={postsPerPageTiles}\r\n                    totalPosts={ list.length }\r\n                    paginate={paginate}\r\n                />\r\n\r\n            </>\r\n            )\r\n    }\r\n      </>\r\n    \r\n    );\r\n}\r\n\r\nexport default TodoItem\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\n\r\nconst initialState = {\r\n  todoList: [],\r\n  isVisible: 0,\r\n  isFevorite : false,\r\n}\r\n\r\n\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'x',\r\n  initialState,\r\n  reducers: {     \r\n    \r\n      setCheck: (state,action) => {\r\n        let x=0;\r\n          state.todoList.map(item => {\r\n            if(action.payload === item.id){\r\n              state.todoList.splice(x,1);\r\n            }\r\n            x++;\r\n          })\r\n      },\r\n\r\n      setFavorite:(state,action) => {\r\n        let x=0;\r\n        state.todoList.map(item => {\r\n          if(action.payload === item.id){\r\n            item.favorite = !item.favorite;\r\n          }\r\n          x++;\r\n        })\r\n      },\r\n\r\n      setClear: (state) => {\r\n        state.todoList.splice(0, state.todoList.length);\r\n      },\r\n\r\n      setVideo: (state,action) => {\r\n        state.todoList.push(action.payload); \r\n        \r\n    },\r\n\r\n    setVisible: (state,action) => {\r\n      state.isVisible = action.payload;\r\n  },\r\n  setFevorite: (state,action) => {\r\n    state.isFevorite = action.payload;\r\n},\r\n  }\r\n});\r\n\r\nexport const { saveTodo , setCheck , setVideo, setVisible,setFavorite,setClear,setFevorite } = counterSlice.actions;\r\n\r\nexport const selectTodoList = state => state.todos.todoList\r\nexport const selectIsVisible = state => state.todos.isVisible\r\nexport const selectIsFevorite = state => state.todos.isFevorite\r\n\r\n\r\nexport default counterSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {setClear,  setVideo , setVisible, setFevorite} from './counterSlice';\r\n\r\nimport './Counter.css';\r\n\r\nexport function Counter() {\r\n  const dispatch = useDispatch();\r\n  const [incrementAmount, setIncrementAmount] = useState('');\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [isFevorite, setIsFevorite] = useState(true);\r\n\r\n    const lastPartAfterSign = (str, separator='/') => {\r\n      var stringSarach = str; \r\n      var n = stringSarach.search(separator);\r\n\r\n      if(n === -1){\r\n        return str;\r\n      }\r\n      else {\r\n        let result = str.substring(str.lastIndexOf(separator)+1);\r\n        result =  result != str ? result : false;\r\n        if(result.length > 11 ) {\r\n          result = str.substring(str.lastIndexOf('=')+1);\r\n          result =  result != str ? result : false;\r\n        }\r\n        return result;\r\n      } \r\n    }\r\n\r\n    const addTodo = () => {\r\n      let id = lastPartAfterSign(incrementAmount);\r\n      if(id.length <= 9){\r\n        getVimeo(id)\r\n      }else{\r\n        getYoutube(id);\r\n      }\r\n    }\r\n\r\n    const hendledemo = ()  => {\r\n      const demo = [ '181696349' ,'yHqeqaLsZRE&t', 'ICRZHDNlJdA&t', 'ICRZHDNlJdA&t' , 'yHqeqaLsZRE&t'];\r\n\r\n      for(let i=0;i<demo.length;i++){\r\n        if(demo[i].length <= 9){\r\n          getVimeo(demo[i]);\r\n        }else{\r\n          getYoutube(demo[i]);\r\n        }   \r\n      }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        dispatch(setClear())\r\n    }\r\n\r\n    const changeVisible = () => {\r\n      setIsVisible(!isVisible);\r\n\r\n      dispatch(setVisible ({\r\n        isVisible : isVisible\r\n      }))\r\n    }\r\n\r\n    const handleFevorite = () => {\r\n      setIsFevorite(!isFevorite);\r\n\r\n      dispatch(setFevorite ({\r\n        isFevorite : isFevorite\r\n      }))\r\n    }\r\n\r\n    const getVimeo = (id) => {\r\n      fetch(`https://vimeo.com/api/v2/video/${id}/json`)\r\n        .then(response => response.json())\r\n        .then(data => \r\n          dispatch(setVideo({\r\n            itemView : data[0].stats_number_of_plays,\r\n            itemLike :  data[0].stats_number_of_likes,\r\n            image: data[0].thumbnail_large,\r\n            imageSmall: data[0].thumbnail_large,\r\n            title : data[0].title,\r\n            published : data[0].upload_date,\r\n            video : lastPartAfterSign(incrementAmount),\r\n            done: false,\r\n            favorite : false,\r\n            id: Date.now(),\r\n          }))\r\n          );\r\n    }\r\n\r\n    const getYoutube = (id) => {\r\n      fetch(`https://www.googleapis.com/youtube/v3/videos?id=${id}&key=AIzaSyDPQ653rSjnsN9tmexU7CmkDKc5t_2t5Jo&part=snippet,contentDetails,statistics,status`)\r\n      .then(response => response.json())\r\n      .then(data => \r\n        dispatch(setVideo({\r\n          itemView : data.items[0].statistics.viewCount,\r\n          itemLike :  data.items[0].statistics.likeCount,\r\n          image: data.items[0].snippet.thumbnails.medium.url,\r\n          imageSmall: data.items[0].snippet.thumbnails.default.url,\r\n          title : data.items[0].snippet.title,\r\n          published : data.items[0].snippet.publishedAt,\r\n          video : lastPartAfterSign(incrementAmount),\r\n          done: false,\r\n          favorite : false,\r\n          id: Date.now(),\r\n        }))\r\n      );\r\n    }\r\n\r\n    const x = {\r\n      background: 'grey'\r\n    };\r\n    const y = {\r\n      background: 'red'\r\n    };\r\n\r\n  return (\r\n    <div className='input'>\r\n    <input type=\"text\" value={incrementAmount} \r\n      onChange={e => setIncrementAmount(e.target.value)} />\r\n    <button \r\n        onClick={addTodo} >\r\n    Add! </button>\r\n    <button \r\n        onClick={changeVisible}>\r\n    Visible </button>\r\n    <button \r\n        onClick={handleClear}>\r\n    Clear </button>\r\n    <button \r\n        onClick={hendledemo}>\r\n    Demo </button>\r\n    <button style = {isFevorite ? (x) : (y)}\r\n        onClick={handleFevorite}>\r\n    Fev </button>\r\n    \r\n\r\n    \r\n</div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport TodoItem from './features/counter/TodoItem';\r\nimport Posts from './features/counter/Posts';\r\n\r\nimport {useSelector} from 'react-redux'\r\nimport {selectTodoList} from './features/counter/counterSlice'\r\nimport {selectIsVisible} from './features/counter/counterSlice'\r\nimport {selectIsFevorite} from './features/counter/counterSlice'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\nfunction App() {\r\n  const todoList = useSelector(selectTodoList);\r\n  const isVisible = useSelector(selectIsVisible);\r\n  const isFevorite = useSelector(selectIsFevorite);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n     <Counter />\r\n          <TodoItem list={todoList} isVisible={isVisible.isVisible} isFevorite={isFevorite.isFevorite}/>\r\n       </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    todos: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}